{
    "C_Cpp.intelliSenseEngineFallback": "Enabled",
    "includePath": [
        "/usr/local/include",
        "/usr/include",
        "${env:SGX_SDK}/include/tlibc"
    ],
    "files.associations": {
        "fuse.h": "c",
        "stdio.h": "c",
        "fcntl.h": "c",
        "iosfwd": "cpp",
        "fstream": "cpp",
        "__bit_reference": "cpp",
        "__config": "cpp",
        "__debug": "cpp",
        "__functional_base": "cpp",
        "__hash_table": "cpp",
        "__locale": "cpp",
        "__mutex_base": "cpp",
        "__split_buffer": "cpp",
        "__threading_support": "cpp",
        "__tuple": "cpp",
        "algorithm": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "chrono": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "exception": "cpp",
        "optional": "cpp",
        "string_view": "cpp",
        "functional": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "ios": "cpp",
        "istream": "cpp",
        "iterator": "cpp",
        "limits": "cpp",
        "locale": "cpp",
        "memory": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numeric": "cpp",
        "ostream": "cpp",
        "queue": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string": "cpp",
        "__sgx_mutex_base": "cpp",
        "sgx_condition_variable": "cpp",
        "sgx_mutex": "cpp",
        "system_error": "cpp",
        "thread": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "unordered_map": "cpp",
        "utility": "cpp",
        "vector": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "memory_resource": "cpp",
        "__tree": "cpp",
        "iostream": "cpp",
        "list": "cpp",
        "map": "cpp",
        "regex": "cpp",
        "shared_mutex": "cpp",
        "stack": "cpp",
        "__sgx": "cpp",
        "__memory": "cpp",
        "set": "cpp",
        "cinttypes": "cpp",
        "cerrno": "cpp",
        "cassert": "cpp",
        "fuse_common.h": "c",
        "stdint.h": "c",
        "concepts": "cpp",
        "ranges": "cpp",
        "__bits": "cpp",
        "__errc": "cpp",
        "__node_handle": "cpp",
        "__nullptr": "cpp",
        "__string": "cpp",
        "compare": "cpp",
        "complex": "cpp",
        "variant": "cpp",
        "numbers": "cpp",
        "semaphore": "cpp",
        "stop_token": "cpp",
        "sgx_edger8r.h": "c",
        "bfs_enclave_core_test_u.h": "c",
        "ext4_blockdev.h": "c",
        "ext4_config.h": "c",
        "types.h": "c",
        "posix_types.h": "c",
        "ext4_dir.h": "c",
        "errno.h": "c",
        "ext4.h": "c",
        "ext4_mkfs.h": "c",
        "hash_map": "cpp",
        "hash_set": "cpp",
        "unordered_set": "cpp",
        "__functional_base_03": "cpp",
        "bfs_common.h": "c",
        "bfs_log.h": "c",
        "stddef.h": "c",
        "sgx_defs.h": "c",
        "ext4_super.h": "c",
        "fuse_log.h": "c",
        "fuse_opt.h": "c",
        "codecvt": "cpp",
        "filesystem": "cpp"
    },
    "editor.detectIndentation": false,
    "C_Cpp.errorSquiggles": "Enabled",
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, IndentWidth: 8, TabWidth: 8, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }",
    "cmake.configureOnOpen": false,
    "clang-format.executable": "clang-format",
    "clang-format.language.typescript.fallbackStyle": "",
    "clang-format.fallbackStyle": "none",

    //python stuff
    "python.linting.enabled": true,
    "python.linting.pylintPath": "pylint",
    "python.linting.pylintEnabled": false,
    "editor.formatOnSave": false,
    "python.formatting.provider": "black",
    "editor.fontSize": 15,
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "python.languageServer": "Pylance",
    "C_Cpp.clang_format_path": "/usr/bin/clang-format",
    // "python.formatting.provider": "yapf",
    // "python.formatting.yapfArgs": ["--style={based_on_style: google, indent_width: 4}"],

    // extra stuff
    "todo-tree.tree.showCountsInTree": true,
    "todo-tree.tree.showBadges": true,
    "git.ignoreLimitWarning": true,
    "C_Cpp.errorSquiggles": "Enabled",
    "C_Cpp.intelliSenseEngineFallback": "Enabled",
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: LLVM, IndentWidth: 8, TabWidth: 8, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }",
    "editor.defaultFormatter": "xaver.clang-format",
    "C_Cpp.clang_format_style": "{ BasedOnStyle: Google, IndentWidth: 8, TabWidth: 8, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }",
    "clang-format.fallbackStyle": "none",
    "clang-format.style": "{ BasedOnStyle: LLVM, IndentWidth: 4, TabWidth: 4, UseTab: Always, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 80, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }",
    "C_Cpp.clang_format_path": "clang-format",
    "[shellscript]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
    },
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
    },
    "cmake.sourceDirectory": "${workspaceFolder}/src/bfs_fs/lwext4",
    "editor.fontFamily": "Courier"
}
